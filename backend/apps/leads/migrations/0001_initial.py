# Generated by Django 3.2.4 on 2022-10-27 09:38

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('users', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Lead',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=50, verbose_name='Name')),
                ('email', models.EmailField(db_index=True, max_length=254, unique=True, verbose_name='Email')),
                ('date_of_birth', models.DateTimeField(verbose_name='Date of Birth')),
                ('phone', models.IntegerField(db_index=True, unique=True, verbose_name='Phone Number')),
                ('current_state', models.CharField(blank=True, choices=[('andhra_pradesh', 'Andhra Pradesh'), ('arunachal_pradesh', 'Arunachal Pradesh'), ('assam', 'Assam'), ('bihar', 'Bihar'), ('chhattisgarh', 'Chhattisgarh'), ('goa', 'Goa'), ('gujarat', 'Gujarat'), ('haryana', 'Haryana'), ('himachal_pradesh', 'Himachal Pradesh'), ('jharkhand', 'Jharkhand'), ('karnataka', 'Karnataka'), ('kerala', 'Kerala'), ('madhya_pradesh', 'Madhya Pradesh'), ('maharashtra', 'Maharashtra'), ('manipur', 'Manipur'), ('meghalaya', 'Meghalaya'), ('mizoram', 'Mizoram'), ('nagaland', 'Nagaland'), ('odisha', 'Odisha'), ('punjab', 'Punjab'), ('rajasthan', 'Rajasthan'), ('sikkim', 'Sikkim'), ('tamil_nadu', 'Tamil Nadu'), ('telangana', 'Telangana'), ('tripura', 'Tripura'), ('uttar_pradesh', 'Uttar Pradesh'), ('uttarakhand', 'Uttarakhand'), ('west_bengal', 'West Bengal'), ('andaman_and_nicobar_islands', 'Andaman and Nicobar Islands'), ('chandigarh', 'Chandigarh'), ('dadra_and_nagar_haveli_and_daman_and_diu', 'Dadra and Nagar Haveli and Daman and Diu'), ('delhi', 'Delhi'), ('jammu_and_kashmir', 'Jammu and Kashmir'), ('ladakh', 'Ladakh'), ('lakshadweep', 'Lakshadweep'), ('puducherry', 'Puducherry')], db_index=True, max_length=50, null=True, verbose_name='Current State')),
                ('current_city', models.CharField(max_length=50, verbose_name='Current City')),
                ('native_state', models.CharField(blank=True, choices=[('andhra_pradesh', 'Andhra Pradesh'), ('arunachal_pradesh', 'Arunachal Pradesh'), ('assam', 'Assam'), ('bihar', 'Bihar'), ('chhattisgarh', 'Chhattisgarh'), ('goa', 'Goa'), ('gujarat', 'Gujarat'), ('haryana', 'Haryana'), ('himachal_pradesh', 'Himachal Pradesh'), ('jharkhand', 'Jharkhand'), ('karnataka', 'Karnataka'), ('kerala', 'Kerala'), ('madhya_pradesh', 'Madhya Pradesh'), ('maharashtra', 'Maharashtra'), ('manipur', 'Manipur'), ('meghalaya', 'Meghalaya'), ('mizoram', 'Mizoram'), ('nagaland', 'Nagaland'), ('odisha', 'Odisha'), ('punjab', 'Punjab'), ('rajasthan', 'Rajasthan'), ('sikkim', 'Sikkim'), ('tamil_nadu', 'Tamil Nadu'), ('telangana', 'Telangana'), ('tripura', 'Tripura'), ('uttar_pradesh', 'Uttar Pradesh'), ('uttarakhand', 'Uttarakhand'), ('west_bengal', 'West Bengal'), ('andaman_and_nicobar_islands', 'Andaman and Nicobar Islands'), ('chandigarh', 'Chandigarh'), ('dadra_and_nagar_haveli_and_daman_and_diu', 'Dadra and Nagar Haveli and Daman and Diu'), ('delhi', 'Delhi'), ('jammu_and_kashmir', 'Jammu and Kashmir'), ('ladakh', 'Ladakh'), ('lakshadweep', 'Lakshadweep'), ('puducherry', 'Puducherry')], db_index=True, max_length=50, null=True, verbose_name='Native State')),
                ('native_city', models.CharField(blank=True, max_length=50, null=True, verbose_name='Native Place')),
                ('college', models.CharField(max_length=50, verbose_name='College')),
                ('degree', models.CharField(max_length=50, verbose_name='Degree')),
                ('branch', models.CharField(max_length=50, verbose_name='Branch')),
                ('year_of_graduation', models.IntegerField(verbose_name='Year of Graduation')),
                ('sources', models.CharField(max_length=50, verbose_name='Sources')),
                ('status', models.CharField(choices=[('blank', ' '), ('shortlisted', 'Shortlisted'), ('rejected', 'Rejected')], max_length=50, verbose_name='Status')),
                ('date_of_calling', models.DateTimeField(null=True, verbose_name='Date of Calling')),
                ('years_agreement', models.CharField(choices=[('blank', ' '), ('yes', 'Yes'), ('no', 'No')], max_length=50, null=True, verbose_name='2 Years Agreement')),
                ('night_shift', models.CharField(choices=[('blank', ' '), ('yes', 'Yes'), ('no', 'No')], max_length=50, null=True, verbose_name='Night Shift')),
                ('liquidated_damage', models.CharField(choices=[('blank', ' '), ('yes', 'Yes'), ('no', 'No')], max_length=50, null=True, verbose_name='Liquidated Damage')),
                ('wfo', models.CharField(choices=[('blank', ' '), ('yes', 'Yes'), ('no', 'No')], max_length=50, null=True, verbose_name='WFO')),
                ('tutoring', models.CharField(choices=[('blank', ' '), ('yes', 'Yes'), ('no', 'No')], max_length=50, null=True, verbose_name='Tutoring')),
                ('relocate', models.CharField(choices=[('blank', ' '), ('yes', 'Yes'), ('no', 'No')], max_length=50, null=True, verbose_name='Relocate')),
                ('vocab_interview_status', models.CharField(choices=[('blank', ' '), ('no_pick_up_1st', 'No Pick Up 1st'), ('no_pick_up_2nd', 'No Pick Up 2nd'), ('no_pick_up_3rd', 'No Pick Up 3rd'), ('declined', 'Declined'), ('will_revert', 'Will Revert'), ('call_later', 'Call Later'), ('rejected', 'Rejected'), ('interview_booked', 'Interview - Booked')], max_length=50, null=True, verbose_name='Vocab Interview Status')),
                ('vocab_interview_date', models.DateTimeField(null=True, verbose_name='Interview Date')),
                ('vocab_score', models.CharField(max_length=50, null=True, verbose_name='Vocab Score')),
                ('vocab_interview_result', models.CharField(choices=[('blank', ' '), ('qualified', 'Qualified'), ('not_qualified', 'Not Qualified'), ('rescheduled', 'Rescheduled'), ('not_attended', 'Not Attended')], max_length=50, null=True, verbose_name='Vocab Interview Result')),
                ('vocab_review', models.CharField(blank=True, db_index=True, max_length=250, null=True, verbose_name='Review')),
                ('communication_date_of_calling', models.DateTimeField(null=True, verbose_name='Date of Calling')),
                ('communication_interview_status', models.CharField(choices=[('blank', ' '), ('no_pick_up_1st', 'No Pick Up 1st'), ('no_pick_up_2nd', 'No Pick Up 2nd'), ('no_pick_up_3rd', 'No Pick Up 3rd'), ('declined', 'Declined'), ('will_revert', 'Will Revert'), ('call_later', 'Call Later'), ('rejected', 'Rejected'), ('interview_booked', 'Interview - Booked')], max_length=50, null=True, verbose_name='Communication Interview Status')),
                ('communication_interview_date', models.DateTimeField(null=True, verbose_name='Communication Date')),
                ('communication_grade', models.CharField(choices=[('blank', ' '), ('a_good', 'A-Good'), ('b1_average', 'B1-Average'), ('b_fair', 'B-Fair'), ('c_below_average', 'C-Below Average')], max_length=50, null=True, verbose_name='Communication Grade')),
                ('communication_result', models.CharField(choices=[('blank', ' '), ('qualified', 'Qualified'), ('not_qualified', 'Not Qualified'), ('rescheduled', 'Rescheduled'), ('not_attended', 'Not Attended')], max_length=50, null=True, verbose_name='Communication Result')),
                ('communication_review', models.CharField(blank=True, db_index=True, max_length=250, null=True, verbose_name='Review')),
                ('hr_date_of_calling', models.DateTimeField(null=True, verbose_name='Date of Calling')),
                ('hr_interview_status', models.CharField(choices=[('blank', ' '), ('no_pick_up_1st', 'No Pick Up 1st'), ('no_pick_up_2nd', 'No Pick Up 2nd'), ('no_pick_up_3rd', 'No Pick Up 3rd'), ('declined', 'Declined'), ('will_revert', 'Will Revert'), ('call_later', 'Call Later'), ('rejected', 'Rejected'), ('interview_booked', 'Interview - Booked')], max_length=50, null=True, verbose_name='HR Interview Status')),
                ('hr_interview_date', models.DateTimeField(null=True, verbose_name='HR Interview Date')),
                ('hr_result', models.CharField(choices=[('blank', ' '), ('shortlisted', 'Shortlisted'), ('rejected', 'Rejected'), ('hold', 'Hold')], max_length=50, null=True, verbose_name='HR Result')),
                ('hr_review', models.CharField(blank=True, db_index=True, max_length=250, null=True, verbose_name='Review')),
                ('offered_status', models.CharField(choices=[('blank', ' '), ('offer_letter_sent', 'Offer Letter Sent'), ('waiting_list', 'Waiting List'), ('check_on_later', 'Check on Later')], max_length=50, null=True, verbose_name='Offered Status')),
                ('offered_date_of_joining', models.DateTimeField(null=True, verbose_name='Date of Joining')),
                ('revised_date_of_joining', models.DateTimeField(null=True, verbose_name='Revised Date of Joining')),
                ('joined_status', models.CharField(choices=[('blank', ' '), ('joined', 'Joined'), ('doj_extended', 'DOJ - Extended'), ('no_response', 'No Response'), ('yet_to_join', 'Yet to join'), ('declined', 'Declined'), ('joined_and_left', 'Joined & Left'), ('rejected_by_management', 'Rejected by Management')], max_length=50, null=True, verbose_name='Joined Status')),
                ('offered_review', models.CharField(blank=True, db_index=True, max_length=250, null=True, verbose_name='Review')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('calling_recruiter', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='calling_recruiter', to='users.user')),
                ('communication_calling_recruiter', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='communication_calling_recruiter', to='users.user')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='application_created_by', to='users.user')),
                ('follow_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='follow_by', to='users.user')),
                ('hr_calling_recruiter', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='hr_calling_recruiter', to='users.user')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='application_updated_by', to='users.user')),
            ],
            options={
                'db_table': 'leads',
            },
        ),
    ]
